<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.Icon" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        RhRbFsaTppsAAAAASUVORK5CYII=
</value>
  </data>
</root>